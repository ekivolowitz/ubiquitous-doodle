version: "3.3"
services:
  star-tides:
    build:
      context: ./
      dockerfile: Dockerfile
    environment:
      FLASK_DEBUG: 1
      PYTHONUNBUFFERED: 1
    env_file:
      - .env
    restart: always
    volumes:
      - ./:/app
    depends_on:
      - db
      - mongodb_container
      - redis
      - worker
    ports:
      - 5000:5000
  test:
    build:
      context: ./
      dockerfile: Dockerfile
    environment:
      FLASK_DEBUG: 1
      PYTHONUNBUFFERED: 1
    restart: always
    volumes:
      - ./:/app
    depends_on:
      - db
      - mongodb_container
    ports:
      - 5000:5000
    command: bash -c "cd /app && pytest star_tides/tests/tests"
  db:
    image: postgres
    volumes:
      - postgresdb-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports: ["5432:5432"]
    expose: ['5432']

  mongodb_container:
    image: mongo:latest
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpassword
      MONGO_INITDB_DATABASE: star_tides
    ports:
      - 27017:27017
    volumes:
      - mongodb-data:/data/db
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
  migrate:
    build:
      context: ./
      dockerfile: Dockerfile
    volumes:
      - ./:/app
    depends_on:
      - db
    command: sh -c "cd /app/star_tides/services/sql/database/migrations && alembic upgrade head"
  redis:
    image: "redis:alpine"
    ports:
      - 6379:6379
  worker:
    build:
      context: ./
      dockerfile: Dockerfile
    depends_on:
      - "redis"
    command: bash -c "pip install -e /app && celery -A \"star_tides.create_app.celery_app\" worker --loglevel=info"
    volumes:
      - ./:/app
volumes:
  mongodb-data:
  postgresdb-data:
